# Upstart job for reconfiguring apt proxy configuration.

description "Probe and configure local APT proxy"
author "Zygmunt Krynicki"
version "0.1"

# We want to run whenever network manager's connectivity status changes
# We want to run whenever the configuration file is touched (create, modify, delete)
start on (
    dbus SIGNAL=StateChanged INTERFACE=org.freedesktop.NetworkManager
) or (
    file FILE=/etc/default/apt-proxy-setup EVENT=create
)

# for debugging, goes to /var/log/upstart/apt-proxy-setup.log
console log

# This is a one-off script that runs and finishes
task

# The configration file for apt-proxy-setup that read that to know what to do.
# NOTE that this is not used by 'start on file' below due to how upstart is designed.
env CONFIG_FILE=/etc/default/apt-proxy-setup

# The configuration file for apt that we maintain
env APT_CONFIG_FILE=/etc/apt/apt.conf.d/00apt-proxy-setup

script
    # Check if we have been triggered by the FILE event
    if [ "$FILE" = "$CONFIG_FILE" ]; then
        case $EVENT in
            create)
                echo "apt-proxy-setup configuration file was created - reconfiguring"
                ;;
            modifiy)
                echo "apt-proxy-setup configuration file was modified - reconfiguring"
                ;;
            delete)
                echo "apt-proxy-setup configuration file was deleted - wiping apt proxy config"
                rm -f "$APT_CONFIG_FILE"
                exit
                ;;
            *)
                echo "EVENT=$EVENT"
                ;;
        esac
    fi
    # Check if we have ARG0 (from the dbus event), and if not, ask network-manager
    # what the current state is. This is needed if we're fired through the 'file'
    # event (for example, because someone has changed the configuration file)
    if [ -z "$ARG0" ]; then
        # When NM_STATE is not specified we've been started by the file event
        # Let's ask network manager what the current state is
        ARG0=$(dbus-send --system --dest=org.freedesktop.NetworkManager --print-reply-literal /org/freedesktop/NetworkManager org.freedesktop.NetworkManager.state | cut -d ' ' -f 5)
    fi
    # ARG0 matches the new NM_STATE which is documented here:
    # https://projects.gnome.org/NetworkManager/developers/api/09/spec.html#type-NM_STATE
    case $ARG0 in
        70) # NM_STATE_UNKNOWN | NM_STATE_CONNECTED_GLOBAL
            # Load the config file if it exists, otherwise stop and don't do anything
            if [ -f "$CONFIG_FILE" ]; then
                . "$CONFIG_FILE" 
            else
                echo "Configuration file not found - wiping apt proxy config"
                rm -f "$APT_CONFIG_FILE"
                exit 1
           fi
            # Sleep for a sec, this makes it work on my connection
            # I suspect that network manager claims stuff works too early
            sleep 1
            # This is the state we are interested in. It means we should have
            # normal networking available. Let's poke the configured URL and
            # see if the is the local network where our proxy resides. If that
            # is the case then just set the proxy from the configuration file.
            echo "Probing $PROBE_URL ..."
            ANSWER=$(wget --no-proxy --timeout=3 --quiet "$PROBE_URL" --output-document=-)
            if [ "$ANSWER" = "$PROBE_ANSWER" ]; then
                echo "Probe URL answer matched, setting $PROXY_URL as the new apt proxy"            
                echo "Acquire::http::Proxy \"$PROXY_URL\";" > "$APT_CONFIG_FILE"
            else
                echo "Probe URL answer did not match, removing proxy configuration"
                rm -f "$APT_CONFIG_FILE"
            fi
            ;;
        *)  # Everything else
            echo "Proxy disabled due to NM_STATE being $ARG0"
            rm -f "$APT_CONFIG_FILE"
            exit 0
            ;;
    esac
end script
